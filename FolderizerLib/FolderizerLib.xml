<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FolderizerLib</name>
    </assembly>
    <members>
        <member name="T:FolderizerLib.Audio.AudioOrganizer">
            <summary>
            Abstract class implemented by classes that organize audio files.
            </summary>
        </member>
        <member name="M:FolderizerLib.Audio.AudioOrganizer.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.AudioOrganizer.#ctor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.AudioOrganizer.#ctor(System.String,System.String,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.AudioOrganizer.#ctor(System.String,System.String,FolderizerLib.OperationMethod)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.AudioOrganizer.#ctor(System.String,System.String,System.UInt32,FolderizerLib.OperationMethod)">
            <inheritdoc/>
        </member>
        <member name="T:FolderizerLib.Audio.AudioTag">
            <summary>
            Tags commonly present in audio files.
            </summary>
        </member>
        <member name="F:FolderizerLib.Audio.AudioTag.Artist">
            <summary>
            Represents the artist tag.
            </summary>
        </member>
        <member name="F:FolderizerLib.Audio.AudioTag.Genre">
            <summary>
            Represents the genre tag.
            </summary>
        </member>
        <member name="F:FolderizerLib.Audio.AudioTag.Year">
            <summary>
            Represents the year tag.
            </summary>
        </member>
        <member name="F:FolderizerLib.Audio.AudioTag.Album">
            <summary>
            Represents the album tag.
            </summary>
        </member>
        <member name="T:FolderizerLib.Audio.AudioTagSequenceValidator">
            <summary>
            Means of validating a sequence of audio tags representing a directory structure.
            </summary>
        </member>
        <member name="M:FolderizerLib.Audio.AudioTagSequenceValidator.Validate(System.Collections.Generic.List{FolderizerLib.Audio.AudioTag})">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.AudioTagSequenceValidator.SequenceContainsAlbumTagNotInLastPosition(System.Collections.Generic.List{FolderizerLib.Audio.AudioTag})">
            <summary>
            Method used in <see cref="M:FolderizerLib.Audio.AudioTagSequenceValidator.Validate(System.Collections.Generic.List{FolderizerLib.Audio.AudioTag})"/>
            </summary>
            <param name="tagSequence"></param>
            <returns></returns>
        </member>
        <member name="M:FolderizerLib.Audio.AudioTagSequenceValidator.SequenceContainsDuplicateTags(System.Collections.Generic.List{FolderizerLib.Audio.AudioTag})">
            <summary>
            Method used in <see cref="M:FolderizerLib.Audio.AudioTagSequenceValidator.Validate(System.Collections.Generic.List{FolderizerLib.Audio.AudioTag})"/>
            </summary>
            <param name="tagSequence"></param>
            <returns></returns>
        </member>
        <member name="T:FolderizerLib.Audio.FolderizerAudio">
            <summary>
            This class provides means to dynamically organize a directory's audio files according to a desired folder structure.
            </summary>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.#ctor(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.#ctor(System.String,System.String,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.#ctor(System.String,System.String,FolderizerLib.OperationMethod)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.#ctor(System.String,System.String,System.UInt32,FolderizerLib.OperationMethod)">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.SetDesiredDirectoryStructure(FolderizerLib.Audio.AudioTag[])">
            <summary>
            <para>Sets the desired organization structure which will be used to organize the audio files of the given directory.</para>
            <para>The exception <see cref="T:FolderizerLib.InvalidTagSequenceException" /> will be thrown if:</para>
            <list type="bullet">
            <item><description>If <see cref="F:FolderizerLib.Audio.AudioTag.Album"/> is present, but not in the last position of the organization sequence;</description></item>
            <item><description>If there are duplicates <see cref="T:FolderizerLib.Audio.AudioTag"/> values.</description></item>
            </list>
            <example>
            Usage example:
            <code>
            SetDesiredDirectoryStructure(AudioTag.Artist, AudioTag.Year, AudioTag.Album)
            </code>
            </example>
            </summary>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.Organize">
            <inheritdoc/>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.GenerateTreeView">
            <inheritdoc/>
        </member>
        <member name="P:FolderizerLib.Audio.FolderizerAudio.TagsSequence">
            <summary>
            A sequence of tags whose order represents the desired directory structure. The value can be set by <see cref="M:FolderizerLib.Audio.FolderizerAudio.SetDesiredDirectoryStructure(FolderizerLib.Audio.AudioTag[])"/>
            </summary>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.GenerateFinalLocation(System.String,System.String)">
            <summary>
            Generates the final location for the given <paramref name="filePath"/> according to the sequence set in <see cref="P:FolderizerLib.Audio.FolderizerAudio.TagsSequence"/>.
            </summary>
            <param name="filePath"></param>
            <param name="mountingPath"></param>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.GetTagValueFromFile(FolderizerLib.Audio.AudioTag,System.String)">
            <summary>
            Returns the file's correspondent meta value.
            </summary>
            <param name="currentFilePath"></param>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:FolderizerLib.Audio.FolderizerAudio.NotAudioFile(System.String)">
             <summary>
            Evaluates if the path leads to an audio file.
             </summary>
             <param name="filePath"></param>
             <returns></returns>
        </member>
        <member name="T:FolderizerLib.Audio.IAudioTagSequenceValidator">
            <summary>
            Defines an interface for classes that validates sequences of <see cref="T:FolderizerLib.Audio.AudioTag"/>.
            </summary>
        </member>
        <member name="M:FolderizerLib.Audio.IAudioTagSequenceValidator.Validate(System.Collections.Generic.List{FolderizerLib.Audio.AudioTag})">
            <summary>
            Determines the validity of a given sequence of <see cref="T:FolderizerLib.Audio.AudioTag"/>
            </summary>
            <param name="tagSequence"></param>
            <exception cref="T:FolderizerLib.InvalidTagSequenceException">Thrown when the evaluated sequence is invalid.</exception>
            <returns>The method returns void.</returns>
        </member>
        <member name="T:FolderizerLib.Error">
            <summary>
            An instance of this class encapsulates information about errors occurred during the execution of the files organization.
            </summary>
        </member>
        <member name="M:FolderizerLib.Error.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:FolderizerLib.Error"/>. 
            </summary>
        </member>
        <member name="P:FolderizerLib.Error.FileName">
            <summary>
            Represents the name of file file, without the path.
            </summary>
        </member>
        <member name="P:FolderizerLib.Error.FilePath">
            <summary>
            Represents the complete file path.
            </summary>
        </member>
        <member name="P:FolderizerLib.Error.ExceptionMessage">
            <summary>
            Contains a string with the message of the thrown exception.
            </summary>
        </member>
        <member name="M:FolderizerLib.ExecutionResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FolderizerLib.ExecutionResult"/> class.
            </summary>
        </member>
        <member name="P:FolderizerLib.ExecutionResult.Errors">
            <summary>
            Returns a collection of logged errors occurred while organizing the directory.
            <para>Each <see cref="T:FolderizerLib.Error"/> encapsulates information like <see cref="P:FolderizerLib.Error.FileName"/>,  <see cref="P:FolderizerLib.Error.FilePath"/>, <see cref="P:FolderizerLib.Error.ExceptionMessage"/></para>
            </summary>
        </member>
        <member name="M:FolderizerLib.ExecutionResult.LogException(FolderizerLib.Error)">
            <summary>
            Adds an <see cref="T:FolderizerLib.Error"/> to a collection of errors stored in <see cref="T:FolderizerLib.ExecutionResult"/> instances, which can be accessed through <see cref="P:FolderizerLib.ExecutionResult.Errors"/> property.
            </summary>
            <param name="error"></param>
        </member>
        <member name="T:FolderizerLib.InvalidTagSequenceException">
            <summary>
            Thrown when an invalid tag sequence representing the desired directory structured is provided.
            </summary>
        </member>
        <member name="M:FolderizerLib.InvalidTagSequenceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FolderizerLib.InvalidTagSequenceException"/> class.
            </summary>
        </member>
        <member name="M:FolderizerLib.InvalidTagSequenceException.#ctor(System.String)">
            <summary>
            <para>Initializes a new instance of the <see cref="T:FolderizerLib.InvalidTagSequenceException"/> class with a specified error message.</para>
            <para></para>
            </summary>
        </member>
        <member name="T:FolderizerLib.Organizer">
            <summary>
            Abstract class implemented by classes that organize files.
            </summary>
        </member>
        <member name="M:FolderizerLib.Organizer.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:FolderizerLib.Organizer.#ctor(System.String)">
             <summary>
            Initializes a new instance with <see cref="P:FolderizerLib.Organizer.BasePath"/> property defined. By default, <see cref="P:FolderizerLib.Organizer.MountingPath"/> property is set to be the same as <see cref="P:FolderizerLib.Organizer.BasePath"/>.
             </summary>
             <param name="basePath"></param>
        </member>
        <member name="P:FolderizerLib.Organizer.BasePath">
            <summary>
            Represents the root directory in which the files to be organized are located.
            </summary>
        </member>
        <member name="P:FolderizerLib.Organizer.MountingPath">
            <summary>
            <para>Represents the directory in which desired folder structure along with the organized files will be located.</para>
            <para>When not set, mounting path equals to base path.</para>
            </summary>
        </member>
        <member name="P:FolderizerLib.Organizer.OperationMethod">
            <summary>
            This property stores either <see cref="F:FolderizerLib.OperationMethod.Copy"/> or <see cref="F:FolderizerLib.OperationMethod.Move"/>, which defines how the files will be handled.
            </summary>
        </member>
        <member name="P:FolderizerLib.Organizer.MaxSearchDepth">
            <summary>
            This property defines the depth of search in subdirectories. The default is zero.
            </summary>
        </member>
        <member name="M:FolderizerLib.Organizer.Organize">
            <summary>
            Results in the creation of the specified folder structure and organization of the files located in the base path.
            </summary>
        </member>
        <member name="M:FolderizerLib.Organizer.GenerateTreeView">
            <summary>
            Returns a Json string reflecting a preview of the resulting directory structure.
            </summary>
        </member>
    </members>
</doc>
